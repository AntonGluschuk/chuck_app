{"version":3,"sources":["components/Content/JokeLogic/Joke/LikeJokeButton/LikeJokeButton.js","components/Sidebar/FavJoke/UnlikeJokeButton/UnlikeJokeButton.js","components/Content/JokeLogic/Joke/Joke.js","components/Content/JokeLogic/JokeOptions/Random/Random.js","components/Content/JokeLogic/JokeOptions/FromCategories/FromCategories.js","components/Content/JokeLogic/JokeOptions/Search/Search.js","components/Content/JokeLogic/JokeOptions/FromCategories/Categories/Categories.js","components/JokeContext/JokeContext.js","components/Content/JokeLogic/JokeOptions/JokeOptions.js","components/Content/JokeLogic/JokeButton/JokeButton.js","components/Sidebar/SideButton/SideButton.js","components/Content/JokeLogic/JokeLogic.js","components/Content/Content.js","components/Sidebar/FavJoke/FavJoke.js","components/Sidebar/Sidebar.js","App.js","index.js"],"names":["LikeJokeButton","id","likeJoke","title","className","onClick","UnlikeJokeButton","unlikeJoke","Joke","date","jokeIsF","value","category","updated_at","href","Math","floor","Date","Random","handleOptionChange","checked","type","name","onChange","htmlFor","FromCategories","Search","Button","styled","button","ButtonToggle","active","Categories","categories","setActive","onSubmit","e","preventDefault","map","key","JokeContext","createContext","JokeProvider","props","useState","jokes","setJokes","JSON","parse","localStorage","getItem","favJokes","setFavJokes","savedJoke","setSavedJoke","selected","setSelected","loading","setLoading","setCategories","query","setQuery","visibleSide","setVisibleSide","validSearch","setValidSearch","validSearchValue","setValidSearchValue","providerValue","useEffect","setItem","stringify","Provider","children","JokeOptions","getAJoke","useContext","placeholder","target","length","onKeyPress","JokeButton","disabled","SideButton","JokeLogic","a","fetch","response","json","data","getCategories","catch","alert","singleJoke","randomSearchJoke","result","checkValidQuery","singleJ","undefined","favJoke","find","joke","item","isFavourite","newLikedJokes","filter","jokes_r","random","index","Content","FavJoke","Sidebar","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fd3de4c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./LikeJokeButton.css\";\r\n\r\nfunction LikeJokeButton({ id, likeJoke }) {\r\n    return (\r\n        <button title=\"Add to Favourites\" className=\"joke__like-btn\" onClick={() => likeJoke(id)}> </button>\r\n    );\r\n}\r\n\r\nexport default LikeJokeButton","import React from \"react\";\r\nimport \"./UnlikeJokeButton.css\";\r\n\r\nfunction UnlikeJokeButton({ id, unlikeJoke }) {\r\n    return (\r\n        <button title=\"Remove from Favourites\" className=\"fav-joke__unlike-btn\" onClick={() => unlikeJoke(id)}> </button>\r\n    );\r\n}\r\n\r\nexport default UnlikeJokeButton","import React from \"react\";\r\nimport \"./Joke.css\";\r\nimport LikeJokeButton from \"./LikeJokeButton/LikeJokeButton\";\r\nimport UnlikeJokeButton from \"../../../Sidebar/FavJoke/UnlikeJokeButton/UnlikeJokeButton\";\r\n\r\n\r\nfunction Joke({ jokeIsF, id, value, category, updated_at, likeJoke, unlikeJoke }) {\r\n\r\n    const calculateHours = (date) => {\r\n        return Math.floor((new Date() - new Date(date)) / 1000 / 60 / 60);\r\n    };\r\n\r\n    return (<div>{ value ?\r\n        <div className=\"joke\">\r\n            {jokeIsF ?\r\n                <UnlikeJokeButton id={id} unlikeJoke={unlikeJoke} />\r\n                :\r\n                <LikeJokeButton id={id} likeJoke={likeJoke} />\r\n            }\r\n            <div className=\"joke__container\">\r\n                <div className=\"joke__comment-circle\"> </div>\r\n                <div className=\"joke__content\">\r\n                    <div className=\"joke__id\">\r\n                        ID: <a id=\"joke__id-link\" href={`https://api.chucknorris.io/jokes/${id}`}>{id}</a>\r\n                    </div>\r\n                    <div className=\"joke__value\">{value}</div>\r\n                    <div className=\"joke__apps\">\r\n                        <div className=\"joke__apps-last-update\">Last update: {calculateHours(updated_at)} hours ago</div>\r\n                        <div className=\"joke__apps-category\">{category}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        :\r\n            null\r\n        }</div>\r\n    );\r\n}\r\n\r\nexport default Joke","import React from \"react\";\r\n\r\nfunction Random({ handleOptionChange, checked }) {\r\n    return (\r\n        <form className=\"joke-options__form\">\r\n            <input\r\n                className=\"joke-options__form-input\"\r\n                id=\"random\"\r\n                type=\"radio\"\r\n                name=\"react-tips\"\r\n                value=\"option1\"\r\n                checked={checked === \"option1\"}\r\n                onChange={handleOptionChange}\r\n            />\r\n            <label className=\"joke-options__form-label\" htmlFor=\"random\">Random</label>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Random","import React from \"react\";\r\n\r\nfunction FromCategories({ handleOptionChange, checked }) {\r\n    return (\r\n        <form className=\"joke-options__form\">\r\n            <input\r\n                className=\"joke-options__form-input\"\r\n                id=\"from-categories\"\r\n                type=\"radio\"\r\n                name=\"react-tips\"\r\n                value=\"option2\"\r\n                checked={checked === \"option2\"}\r\n                onChange={handleOptionChange}\r\n            />\r\n            <label className=\"joke-options__form-label\" htmlFor=\"from-categories\">From categories</label>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default FromCategories","import React from \"react\";\r\n\r\nfunction Search({ handleOptionChange, checked }) {\r\n    return (\r\n        <form className=\"joke-options__form\">\r\n            <input\r\n                className=\"joke-options__form-input\"\r\n                id=\"search\"\r\n                type=\"radio\"\r\n                name=\"react-tips\"\r\n                value=\"option3\"\r\n                checked={checked === \"option3\"}\r\n                onChange={handleOptionChange}\r\n            />\r\n            <label className=\"joke-options__form-label\" htmlFor=\"search\">Search</label>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Search","import React from \"react\";\r\nimport \"./Categories.css\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  color: #ABABAB;\r\n  background-color: white;\r\n  font-size: 12px;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 16px;\r\n  letter-spacing: 2px;\r\n  text-transform: uppercase;\r\n  padding: 5px 10px;\r\n  border: 2px solid #F8F8F8;\r\n  border-radius: 6px;\r\n  box-sizing: border-box;\r\n  margin: 8px 8px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #333;\r\n  };\r\n`;\r\n\r\nconst ButtonToggle = styled(Button)`\r\n  opacity: 0.6;\r\n  ${({ active }) =>\r\n    active &&\r\n    `\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    letter-spacing: 2px;\r\n    text-transform: uppercase;\r\n    color: #333333;\r\n    background-color: #F8F8F8;\r\n    border: 2px solid #F8F8F8;\r\n    border-radius: 6px;\r\n    box-sizing: border-box;\r\n    opacity: 1;\r\n  `}\r\n`;\r\n\r\nfunction Categories({ categories, active, setActive }) {\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n    };\r\n    return (\r\n        <form className=\"categories\" onSubmit={handleSubmit}>\r\n            {categories.map(category =>\r\n                <ButtonToggle\r\n                        className=\"categories__btn\"\r\n                        value={category}\r\n                        key={category}\r\n                        active={active === category}\r\n                        onClick={() => setActive(category)}\r\n                >{category}</ButtonToggle>)}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Categories","import React, {createContext, useState, useEffect} from \"react\";\r\n\r\nexport const JokeContext = createContext();\r\n\r\nexport const JokeProvider = (props) => {\r\n    const initialFavJoke = () => (JSON.parse(localStorage.getItem('favourite_jokes')) || []);\r\n    const [jokes, setJokes] = useState([]);\r\n    const [favJokes, setFavJokes] = useState(initialFavJoke);\r\n    const [savedJoke, setSavedJoke] = useState(false);\r\n    const [selected, setSelected] = useState(\"option1\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [active, setActive] = useState(\"animal\");\r\n    const [query, setQuery] = useState(\"\");\r\n    const [visibleSide, setVisibleSide] = useState(false);\r\n    const [validSearch, setValidSearch] = useState(true);\r\n    const [validSearchValue, setValidSearchValue] = useState(true);\r\n\r\n    const providerValue = {\r\n        jokes,\r\n        setJokes,\r\n        favJokes,\r\n        setFavJokes,\r\n        savedJoke,\r\n        setSavedJoke,\r\n        selected,\r\n        setSelected,\r\n        loading,\r\n        setLoading,\r\n        categories,\r\n        setCategories,\r\n        active,\r\n        setActive,\r\n        query,\r\n        setQuery,\r\n        visibleSide,\r\n        setVisibleSide,\r\n        validSearch,\r\n        setValidSearch,\r\n        validSearchValue,\r\n        setValidSearchValue\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('favourite_jokes', JSON.stringify(favJokes));\r\n    }, [favJokes]);\r\n\r\n    return (\r\n        <JokeContext.Provider value={providerValue}>\r\n            {props.children}\r\n        </JokeContext.Provider>\r\n    )\r\n};","import React, {useContext} from \"react\";\r\nimport Random from \"./Random/Random\";\r\nimport FromCategories from \"./FromCategories/FromCategories\";\r\nimport Search from \"./Search/Search\";\r\nimport Categories from \"./FromCategories/Categories/Categories\";\r\nimport \"./JokeOptions.css\";\r\nimport {JokeContext} from \"../../../JokeContext/JokeContext\";\r\n\r\nfunction JokeOptions({ selected, handleOptionChange, categories, active, setActive, query, setQuery, getAJoke }) {\r\n    const {\r\n        validSearch,\r\n        setValidSearch,\r\n        validSearchValue\r\n    } = useContext(JokeContext);\r\n\r\n    const handleSearchValue = e => {\r\n        if(e.target.value.length < 3 || e.target.value.length > 120) {\r\n            setValidSearch(false);\r\n        } else {\r\n            setValidSearch(true);\r\n        }\r\n        setQuery(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"joke-options\">\r\n                {/* Random RadioButton*/}\r\n                <Random checked={selected} handleOptionChange={handleOptionChange}/>\r\n                {/* FromCategories RadioButton*/}\r\n                <FromCategories checked={selected} handleOptionChange={handleOptionChange}/>\r\n                {/* Categories List*/}\r\n                {(selected === \"option2\") ?\r\n                    <Categories selected={selected}\r\n                                categories={categories}\r\n                                active={active}\r\n                                setActive={setActive}\r\n                    />\r\n                    :\r\n                    null\r\n                }\r\n                {/* Search RadioButton*/}\r\n                <Search checked={selected} handleOptionChange={handleOptionChange}/>\r\n                {(selected === \"option3\") ?\r\n                    <form className=\"joke-options__search-form\">\r\n                        <input\r\n                            className=\"joke-options__search-input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Free text search...\"\r\n                            value={query}\r\n                            onChange={handleSearchValue}\r\n                            onKeyPress={(e) => {\r\n                                if (e.key === \"Enter\") {\r\n                                    e.preventDefault();\r\n                                    if (query.length >= 3) {\r\n                                        getAJoke();\r\n                                    }\r\n                                }\r\n                            }}\r\n                        />\r\n                        {!validSearch && <span className=\"joke-options__invalid-size\">Text size must be between 3 and 120 characters</span>}\r\n                        {!validSearchValue && <span className=\"joke-options__invalid-value\">Enter a valid search value</span>}\r\n                    </form>\r\n                    :\r\n                    null\r\n                }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JokeOptions","import React from \"react\";\r\nimport \"./JokeButton.css\"\r\n\r\nfunction JokeButton({ getAJoke, query, selected }) {\r\n\r\n    return (\r\n        <div>\r\n        {selected === 'option3' ?\r\n            <button className=\"joke-btn\" onClick={getAJoke} disabled={query.length < 3}>Get a joke</button>\r\n        :\r\n            <button className=\"joke-btn\" onClick={getAJoke}>Get a joke</button>\r\n        }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default JokeButton","import React, {useContext} from \"react\";\r\nimport { JokeContext } from \"../../JokeContext/JokeContext\";\r\nimport \"./SideButton.css\";\r\n\r\nfunction SideButton() {\r\n    const {\r\n        visibleSide,\r\n        setVisibleSide\r\n    } = useContext(JokeContext);\r\n\r\n\r\n    const openSideBar = () => {\r\n        if(!visibleSide) {\r\n            setVisibleSide(true);\r\n        } else {\r\n            setVisibleSide(false);\r\n        }\r\n    };\r\n\r\n    /*Change className for div side-button*/\r\n    const changeSidebarIcon = (changeIcon) => {\r\n        if(!visibleSide) {\r\n            changeIcon = \"\";\r\n        } else {\r\n            changeIcon = \"side-button_active\";\r\n        }\r\n        return changeIcon;\r\n    };\r\n\r\n    return (\r\n        <div className={`side-button ${changeSidebarIcon()}`} onClick={() => openSideBar()}>\r\n            <div className=\"side-button__icon\">\r\n                <span className=\"side-button__icon-line first-line\">\r\n                </span>\r\n                <span className=\"side-button__icon-line second-line\">\r\n                </span>\r\n            </div>\r\n            <div className=\"side-button__title\">Favourite</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideButton","import React, {useContext, useEffect} from \"react\";\r\nimport \"./JokeLogic.css\";\r\nimport Joke from \"./Joke/Joke\";\r\nimport JokeOptions from \"./JokeOptions/JokeOptions\";\r\nimport JokeButton from \"./JokeButton/JokeButton\";\r\nimport SideButton from \"../../Sidebar/SideButton/SideButton\";\r\nimport { JokeContext } from \"../../JokeContext/JokeContext\";\r\n\r\nfunction JokeLogic() {\r\n\r\n    const {\r\n        jokes,\r\n        setJokes,\r\n        favJokes,\r\n        setFavJokes,\r\n        selected,\r\n        setSelected,\r\n        loading,\r\n        setLoading,\r\n        categories,\r\n        setCategories,\r\n        active,\r\n        setActive,\r\n        query,\r\n        setQuery,\r\n        setValidSearchValue\r\n    } = useContext(JokeContext);\r\n\r\n    useEffect(() => {\r\n       async function getCategories() {\r\n            const response = await fetch('https://api.chucknorris.io/jokes/categories');\r\n            const data = await response.json();\r\n            setCategories(data);\r\n        }\r\n        getCategories().catch((e) => alert(e));\r\n    }, []);\r\n\r\n    const getAJoke = async () => {\r\n        setLoading(true);\r\n        if(selected === \"option1\") {\r\n            const response = await fetch('https://api.chucknorris.io/jokes/random');\r\n            const data = await response.json();\r\n            setJokes([data, ...jokes]);\r\n            setLoading(false);\r\n        }\r\n        else if(selected === \"option2\") {\r\n            const response = await fetch(`https://api.chucknorris.io/jokes/random?category=${active}`);\r\n            const data = await response.json();\r\n            setJokes([data, ...jokes]);\r\n            setLoading(false);\r\n        }\r\n        else if(selected === \"option3\") {\r\n            const response = await fetch(`https://api.chucknorris.io/jokes/search?query=${query}`);\r\n            const data = await response.json();\r\n            const singleJoke = randomSearchJoke(data.result);\r\n            checkValidQuery(singleJoke);\r\n        }\r\n    };\r\n\r\n    const checkValidQuery = (singleJ) => {\r\n        if(singleJ === undefined) {\r\n            setQuery(\"\");\r\n            setValidSearchValue(false);\r\n            setLoading(false);\r\n        } else {\r\n            setJokes([singleJ, ...jokes]);\r\n            setValidSearchValue(true);\r\n            setQuery(\"\");\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleOptionChange = e => {\r\n        if(selected === \"option1\" || selected === \"option3\") {\r\n            setActive(\"animal\");\r\n            setSelected(e.target.value);\r\n        }\r\n        else if(selected === \"option1\" || selected === \"option2\") {\r\n            setValidSearchValue(true);\r\n            setSelected(e.target.value);\r\n        } else {\r\n            setSelected(e.target.value);\r\n        }\r\n    };\r\n\r\n    const likeJoke = (id) => {\r\n        let favJoke;\r\n\r\n        if (favJokes.find(joke => joke.id === id)) return;\r\n\r\n        favJoke = jokes.find(joke => joke.id === id);\r\n\r\n        setFavJokes([favJoke, ...favJokes]);\r\n        setJokes(jokes => jokes.map(item => item.id === id ? {...item, isFavourite: true} : item));\r\n    };\r\n\r\n    const unlikeJoke = (id) => {\r\n        const newLikedJokes = favJokes.filter(joke => joke.id !== id);\r\n        setFavJokes(newLikedJokes);\r\n        setJokes(jokes => jokes.map(item => item.id === id ? {...item, isFavourite: false} : item));\r\n    };\r\n\r\n    const randomSearchJoke = (jokes_r) =>  {\r\n        let randJ = Math.floor(Math.random() * jokes_r.length);\r\n      return jokes_r[randJ];\r\n    };\r\n\r\n    return (\r\n        <div className=\"joke-logic\">\r\n            <div className=\"joke-logic__logo\">\r\n                <div className=\"joke-logic__logo-title\">MSI 2020</div>\r\n                <SideButton/>\r\n            </div>\r\n            <div className=\"joke-logic__intro\">\r\n                <div className=\"joke-logic__intro-title\">Hey!</div>\r\n                <div className=\"joke-logic__intro-subtitle\">Let's try to find a joke for you:</div>\r\n\r\n                {/*Radio Buttons*/}\r\n                <JokeOptions\r\n                    handleOptionChange={handleOptionChange}\r\n                    selected={selected}\r\n                    active={active}\r\n                    setActive={setActive}\r\n                    categories={categories}\r\n                    query={query}\r\n                    setQuery={setQuery}\r\n                    getAJoke={getAJoke}\r\n                />\r\n\r\n                {/*Get a Joke Button*/}\r\n                <JokeButton getAJoke={getAJoke} query={query} selected={selected}/>\r\n            </div>\r\n            {/*Loader*/}\r\n            {loading && <span className=\"joke-logic__loader\"> </span>}\r\n            {/*Jokes*/}\r\n            {\r\n                jokes.map((joke, index) => {\r\n                    return (\r\n                        <Joke\r\n                            value={joke.value}\r\n                            id={joke.id}\r\n                            category={joke.categories}\r\n                            updated_at={joke.updated_at}\r\n                            likeJoke={likeJoke}\r\n                            unlikeJoke={unlikeJoke}\r\n                            jokeIsF={joke.isFavourite}\r\n                            key={index}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JokeLogic","import React, {useContext} from \"react\";\r\nimport JokeLogic from \"./JokeLogic/JokeLogic\";\r\nimport \"./Content.css\";\r\nimport {JokeContext} from \"../JokeContext/JokeContext\";\r\n\r\nfunction Content() {\r\n\r\n    const {\r\n        visibleSide\r\n    } = useContext(JokeContext);\r\n\r\n    /*Change className for div content*/\r\n    const deactivateContent = (closeContent) => {\r\n        if(!visibleSide) {\r\n            closeContent = \"\";\r\n        } else {\r\n            closeContent = \"content_deactivate\";\r\n        }\r\n        return closeContent;\r\n    };\r\n\r\n    return (\r\n        <div className={`content ${deactivateContent()}`}>\r\n            <JokeLogic />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import React from \"react\";\r\nimport \"./FavJoke.css\";\r\nimport UnlikeJokeButton from \"./UnlikeJokeButton/UnlikeJokeButton\";\r\n\r\nfunction FavJoke({ id, value, category, updated_at, unlikeJoke }) {\r\n\r\n    const calculateHours = (date) => {\r\n        return Math.floor((new Date() - new Date(date)) / 1000 / 60 / 60);\r\n    };\r\n\r\n    return (<div>{ value ?\r\n        <div className=\"fav-joke\">\r\n            <UnlikeJokeButton id={id} unlikeJoke={unlikeJoke} />\r\n            <div className=\"fav-joke__container\">\r\n                <div className=\"fav-joke__comment-circle\"> </div>\r\n                <div className=\"fav-joke__content\">\r\n                    <div className=\"fav-joke__id\">\r\n                        ID: <a id=\"fav-joke__id-link\" href={`https://api.chucknorris.io/jokes/${id}`}>{id}</a>\r\n                    </div>\r\n                    <div className=\"fav-joke__value\">{value}</div>\r\n                    <div className=\"fav-joke__apps\">\r\n                        <div className=\"fav-joke__apps-last-update\">Last update: {calculateHours(updated_at)} hours ago</div>\r\n                        <div className=\"fav-joke__apps-category\">{category}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        :\r\n            null\r\n        }</div>\r\n    );\r\n}\r\n\r\nexport default FavJoke","import React, {useContext} from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport { JokeContext } from \"../JokeContext/JokeContext\";\r\nimport FavJoke from \"./FavJoke/FavJoke\";\r\n\r\nfunction Sidebar() {\r\n\r\n    const {\r\n        setJokes,\r\n        favJokes,\r\n        setFavJokes,\r\n        visibleSide\r\n    } = useContext(JokeContext);\r\n\r\n    const unlikeJoke = (id) => {\r\n        const newLikedJokes = favJokes.filter(joke => joke.id !== id);\r\n        setFavJokes(newLikedJokes);\r\n        setJokes(jokes => jokes.map(item => item.id === id ? {...item, isFavourite: false} : item));\r\n    };\r\n\r\n    /*Change className for aside sidebar*/\r\n    const openSide = (opS) => {\r\n        if(!visibleSide) {\r\n            opS = \"\";\r\n        } else {\r\n            opS = \"sidebar_active\";\r\n        }\r\n        return opS;\r\n    };\r\n\r\n    return (\r\n        <aside className={`sidebar ${openSide()}`}>\r\n            <div className=\"sidebar__title\">Favourite</div>\r\n            <div className=\"sidebar__jokes\">\r\n            {\r\n                favJokes.map((favJoke, index) => {\r\n                    return (\r\n                        <FavJoke\r\n                            value={favJoke.value}\r\n                            id={favJoke.id}\r\n                            category={favJoke.categories}\r\n                            updated_at={favJoke.updated_at}\r\n                            unlikeJoke={unlikeJoke}\r\n                            key={index}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React from 'react';\nimport './App.css';\nimport Content from './components/Content/Content';\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport {JokeProvider} from \"./components/JokeContext/JokeContext\";\n\nfunction App() {\n\n  return (\n      <JokeProvider>\n          <section className=\"app\">\n              <Content/>\n              <Sidebar/>\n          </section>\n      </JokeProvider>\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\n\n\n// ========================================\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}