{"version":3,"sources":["components/JokeContext/JokeReducer.js","components/JokeContext/JokeContext.js","components/Content/JokeLogic/Joke/LikeJokeButton/LikeJokeButton.js","components/Sidebar/FavJoke/UnlikeJokeButton/UnlikeJokeButton.js","components/Content/JokeLogic/Joke/Joke.js","components/Content/JokeLogic/JokeOptions/Random/Random.js","components/Content/JokeLogic/JokeOptions/FromCategories/FromCategories.js","components/Content/JokeLogic/JokeOptions/Search/Search.js","components/Content/JokeLogic/JokeOptions/FromCategories/Categories/Categories.js","components/Content/JokeLogic/JokeOptions/Search/SearchInput/SearchInput.js","components/Content/JokeLogic/JokeOptions/JokeOptions.js","components/Content/JokeLogic/JokeButton/JokeButton.js","components/Sidebar/SideButton/SideButton.js","components/Content/JokeLogic/JokeLogic.js","components/Content/Content.js","components/Sidebar/FavJoke/FavJoke.js","components/Sidebar/Sidebar.js","App.js","index.js"],"names":["JokeReducer","state","action","type","prev_jokes","find","joke","id","joke_id","filter","favJoke_id","JokeContext","createContext","JokeProvider","props","useReducer","JSON","parse","localStorage","getItem","favJokes","dispatch","useState","jokes","setJokes","selected","setSelected","loading","setLoading","categories","setCategories","active","setActive","query","setQuery","visibleSide","setVisibleSide","validSearch","setValidSearch","validSearchValue","setValidSearchValue","providerValue","likeJoke","map","item","isFavourite","unlikeJoke","calculateHours","date","Math","floor","Date","handleOptionChange","e","target","value","useEffect","setItem","stringify","Provider","children","LikeJokeButton","useContext","title","className","onClick","UnlikeJokeButton","Joke","category","updated_at","jokeIsF","href","Random","name","checked","onChange","htmlFor","FromCategories","Search","Button","styled","button","ButtonToggle","Categories","onSubmit","preventDefault","key","SearchInput","getAJoke","placeholder","length","replace","onKeyPress","JokeOptions","JokeButton","disabled","SideButton","JokeLogic","a","fetch","response","json","data","getCategories","catch","alert","getUnique","singleJoke","randomSearchJoke","result","checkValidQuery","singleJ","undefined","jokes_r","random","Content","FavJoke","Sidebar","favJoke","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e69ff02.chunk.js","sourcesContent":["export const JokeReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LIKE_JOKE':\r\n            return [\r\n                action.prev_jokes.find(joke => joke.id === action.joke_id),\r\n                ...state\r\n            ];\r\n        case 'UNLIKE_JOKE':\r\n            return state.filter(joke => joke.id !== action.favJoke_id);\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, {createContext, useState, useEffect, useReducer} from \"react\";\r\nimport {JokeReducer} from \"./JokeReducer\";\r\nexport const JokeContext = createContext();\r\n\r\nexport const JokeProvider = (props) => {\r\n    const [favJokes, dispatch] = useReducer(JokeReducer, JSON.parse(localStorage.getItem('favourite_jokes')) || []);\r\n    // const initialFavJoke = () => (JSON.parse(localStorage.getItem('favourite_jokes')) || []);\r\n    const [jokes, setJokes] = useState([]);\r\n    // const [favJokes, setFavJokes] = useState(initialFavJoke);\r\n    const [selected, setSelected] = useState(\"option1\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [active, setActive] = useState(\"animal\");\r\n    const [query, setQuery] = useState(\"\");\r\n    const [visibleSide, setVisibleSide] = useState(false);\r\n    const [validSearch, setValidSearch] = useState(true);\r\n    const [validSearchValue, setValidSearchValue] = useState(true);\r\n\r\n    /*Added joke to the favourite */\r\n    const likeJoke = (id) => {\r\n        if (favJokes.find(joke => joke.id === id)) return;\r\n        dispatch({type: 'LIKE_JOKE', joke_id: id, prev_jokes: jokes});\r\n        // setFavJokes([jokes.find(joke => joke.id === id), ...favJokes]);\r\n        setJokes(jokes => jokes.map(item => item.id === id ? {...item, isFavourite: true} : item));\r\n    };\r\n\r\n    /*Delete joke from the favourite */\r\n    const unlikeJoke = (id) => {\r\n        dispatch({type: 'UNLIKE_JOKE', favJoke_id: id});\r\n        // setFavJokes(favJokes.filter(joke => joke.id !== id));\r\n        setJokes(jokes => jokes.map(item => item.id === id ? {...item, isFavourite: false} : item));\r\n    };\r\n\r\n    /*Make a correct format of last update date*/\r\n    const calculateHours = (date) => {\r\n        return Math.floor((new Date() - new Date(date)) / 1000 / 60 / 60);\r\n    };\r\n\r\n    /*Handle options selecting (Random, From categories, Search)*/\r\n    const handleOptionChange = e => {\r\n        if(selected === \"option1\" || selected === \"option3\") {\r\n            setActive(\"animal\");\r\n            setSelected(e.target.value);\r\n        }\r\n        else if(selected === \"option1\" || selected === \"option2\") {\r\n            setValidSearchValue(true);\r\n            setSelected(e.target.value);\r\n        } else {\r\n            setSelected(e.target.value);\r\n        }\r\n    };\r\n\r\n    const providerValue = {\r\n        jokes,\r\n        favJokes,\r\n        setJokes,\r\n        selected,\r\n        setSelected,\r\n        loading,\r\n        setLoading,\r\n        categories,\r\n        setCategories,\r\n        active,\r\n        setActive,\r\n        query,\r\n        setQuery,\r\n        visibleSide,\r\n        setVisibleSide,\r\n        validSearch,\r\n        setValidSearch,\r\n        validSearchValue,\r\n        setValidSearchValue,\r\n        likeJoke,\r\n        unlikeJoke,\r\n        calculateHours,\r\n        handleOptionChange\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('favourite_jokes', JSON.stringify(favJokes));\r\n    }, [favJokes]);\r\n\r\n    return (\r\n        <JokeContext.Provider value={providerValue}>\r\n            {props.children}\r\n        </JokeContext.Provider>\r\n    )\r\n};","import React, {useContext} from \"react\";\r\nimport \"./LikeJokeButton.css\";\r\nimport {JokeContext} from \"../../../../JokeContext/JokeContext\";\r\n\r\nfunction LikeJokeButton({ id }) {\r\n\r\n    const {\r\n        likeJoke\r\n    } = useContext(JokeContext);\r\n\r\n    return (\r\n        <button title=\"Add to Favourites\" className=\"joke__like-btn\" onClick={() => likeJoke(id)}> </button>\r\n    );\r\n}\r\n\r\nexport default LikeJokeButton","import React, {useContext} from \"react\";\r\nimport \"./UnlikeJokeButton.css\";\r\nimport {JokeContext} from \"../../../JokeContext/JokeContext\";\r\n\r\nfunction UnlikeJokeButton({ id }) {\r\n\r\n    const {\r\n        unlikeJoke\r\n    } = useContext(JokeContext);\r\n\r\n    return (\r\n        <button title=\"Remove from Favourites\" className=\"fav-joke__unlike-btn\" onClick={() => unlikeJoke(id)}> </button>\r\n    );\r\n}\r\n\r\nexport default UnlikeJokeButton","import React, {useContext} from \"react\";\r\nimport \"./Joke.css\";\r\nimport LikeJokeButton from \"./LikeJokeButton/LikeJokeButton\";\r\nimport UnlikeJokeButton from \"../../../Sidebar/FavJoke/UnlikeJokeButton/UnlikeJokeButton\";\r\nimport {JokeContext} from \"../../../JokeContext/JokeContext\";\r\n\r\n\r\nfunction Joke({ value, id, category, updated_at, jokeIsF }) {\r\n\r\n    const {\r\n        calculateHours\r\n    } = useContext(JokeContext);\r\n\r\n    return (<div>{ value ?\r\n        <div className=\"joke\">\r\n            {jokeIsF ?\r\n                <UnlikeJokeButton id={id} />\r\n                :\r\n                <LikeJokeButton id={id} />\r\n            }\r\n            <div className=\"joke__container\">\r\n                <div className=\"joke__comment-circle\"> </div>\r\n                <div className=\"joke__content\">\r\n                    <div className=\"joke__id\">\r\n                        ID: <a id=\"joke__id-link\" href={`https://api.chucknorris.io/jokes/${id}`}>{id}</a>\r\n                    </div>\r\n                    <div className=\"joke__value\">{value}</div>\r\n                    <div className=\"joke__apps\">\r\n                        <div className=\"joke__apps-last-update\">Last update: {calculateHours(updated_at)} hours ago</div>\r\n                        <div className=\"joke__apps-category\">{category}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        :\r\n            null\r\n        }</div>\r\n    );\r\n}\r\n\r\nexport default Joke","import React, {useContext} from \"react\";\r\nimport {JokeContext} from \"../../../../JokeContext/JokeContext\";\r\n\r\nfunction Random() {\r\n\r\n    const {\r\n        selected,\r\n        handleOptionChange\r\n    } = useContext(JokeContext);\r\n\r\n    return (\r\n        <form className=\"joke-options__form\">\r\n            <input\r\n                className=\"joke-options__form-input\"\r\n                id=\"random\"\r\n                type=\"radio\"\r\n                name=\"react-tips\"\r\n                value=\"option1\"\r\n                checked={selected === \"option1\"}\r\n                onChange={handleOptionChange}\r\n            />\r\n            <label className=\"joke-options__form-label\" htmlFor=\"random\">Random</label>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Random","import React, {useContext} from \"react\";\r\nimport {JokeContext} from \"../../../../JokeContext/JokeContext\";\r\n\r\nfunction FromCategories() {\r\n\r\n    const {\r\n        selected,\r\n        handleOptionChange\r\n    } = useContext(JokeContext);\r\n\r\n    return (\r\n        <form className=\"joke-options__form\">\r\n            <input\r\n                className=\"joke-options__form-input\"\r\n                id=\"from-categories\"\r\n                type=\"radio\"\r\n                name=\"react-tips\"\r\n                value=\"option2\"\r\n                checked={selected === \"option2\"}\r\n                onChange={handleOptionChange}\r\n            />\r\n            <label className=\"joke-options__form-label\" htmlFor=\"from-categories\">From categories</label>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default FromCategories","import React, {useContext} from \"react\";\r\nimport {JokeContext} from \"../../../../JokeContext/JokeContext\";\r\n\r\nfunction Search() {\r\n\r\n    const {\r\n        selected,\r\n        handleOptionChange\r\n    } = useContext(JokeContext);\r\n\r\n    return (\r\n        <form className=\"joke-options__form\">\r\n            <input\r\n                className=\"joke-options__form-input\"\r\n                id=\"search\"\r\n                type=\"radio\"\r\n                name=\"react-tips\"\r\n                value=\"option3\"\r\n                checked={selected === \"option3\"}\r\n                onChange={handleOptionChange}\r\n            />\r\n            <label className=\"joke-options__form-label\" htmlFor=\"search\">Search</label>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Search","import React, {useContext} from \"react\";\r\nimport \"./Categories.css\";\r\nimport styled from \"styled-components\";\r\nimport {JokeContext} from \"../../../../../JokeContext/JokeContext\";\r\n\r\nconst Button = styled.button`\r\n  color: #ABABAB;\r\n  background-color: white;\r\n  font-size: 12px;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 16px;\r\n  letter-spacing: 2px;\r\n  text-transform: uppercase;\r\n  padding: 5px 10px;\r\n  border: 2px solid #F8F8F8;\r\n  border-radius: 6px;\r\n  box-sizing: border-box;\r\n  margin: 8px 8px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #333;\r\n  };\r\n`;\r\n\r\nconst ButtonToggle = styled(Button)`\r\n  opacity: 0.6;\r\n  ${({ active }) =>\r\n    active &&\r\n    `\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    letter-spacing: 2px;\r\n    text-transform: uppercase;\r\n    color: #333333;\r\n    background-color: #F8F8F8;\r\n    border: 2px solid #F8F8F8;\r\n    border-radius: 6px;\r\n    box-sizing: border-box;\r\n    opacity: 1;\r\n  `}\r\n`;\r\n\r\nfunction Categories() {\r\n\r\n    const {\r\n        categories,\r\n        active,\r\n        setActive\r\n    } = useContext(JokeContext);\r\n\r\n    /*Preventing from page refreshing after selecting category*/\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <form className=\"categories\" onSubmit={handleSubmit}>\r\n            {categories.map(category =>\r\n                <ButtonToggle\r\n                        className=\"categories__btn\"\r\n                        value={category}\r\n                        key={category}\r\n                        active={active === category}\r\n                        onClick={() => setActive(category)}\r\n                >{category}</ButtonToggle>)}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Categories","import React, {useContext} from \"react\";\r\nimport \"./SearchInput.css\"\r\nimport {JokeContext} from \"../../../../../JokeContext/JokeContext\";\r\n\r\nfunction SearchInput({ getAJoke }) {\r\n\r\n    const {\r\n        query,\r\n        setQuery,\r\n        validSearch,\r\n        setValidSearch,\r\n        validSearchValue\r\n    } = useContext(JokeContext);\r\n\r\n    /*Checking whether the value written in the search input will pass the validation*/\r\n    const handleSearchValue = e => {\r\n        if(e.target.value.length < 3 || e.target.value.length > 120) {\r\n            setValidSearch(false);\r\n        } else {\r\n            setValidSearch(true);\r\n        }\r\n        setQuery(e.target.value.replace(/[^A-Za-z]/ig, ''));\r\n    };\r\n\r\n    /*Allow to press Enter to make a search for a Joke*/\r\n    const enterKeyPress = e => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            if (query.length >= 3) {\r\n                getAJoke();\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className=\"joke-options__search-form\">\r\n            <input\r\n                className=\"joke-options__search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Free text search...\"\r\n                value={query}\r\n                onChange={handleSearchValue}\r\n                onKeyPress={enterKeyPress}\r\n            />\r\n            {!validSearch && <span className=\"joke-options__invalid-size\">Text size must be between 3 and 120 characters</span>}\r\n            {!validSearchValue && <span className=\"joke-options__invalid-value\">Enter a valid search value</span>}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchInput","import React, {useContext} from \"react\";\r\nimport Random from \"./Random/Random\";\r\nimport FromCategories from \"./FromCategories/FromCategories\";\r\nimport Search from \"./Search/Search\";\r\nimport Categories from \"./FromCategories/Categories/Categories\";\r\nimport \"./JokeOptions.css\";\r\nimport {JokeContext} from \"../../../JokeContext/JokeContext\";\r\nimport SearchInput from \"./Search/SearchInput/SearchInput\";\r\n\r\nfunction JokeOptions({ getAJoke }) {\r\n    const {\r\n        selected\r\n    } = useContext(JokeContext);\r\n\r\n    return (\r\n        <div className=\"joke-options\">\r\n                {/* Random RadioButton*/}\r\n                <Random/>\r\n                {/* FromCategories RadioButton*/}\r\n                <FromCategories/>\r\n                {/* Categories List*/}\r\n                {(selected === \"option2\") ?\r\n                    <Categories/>\r\n                    :\r\n                    null\r\n                }\r\n                {/* Search RadioButton*/}\r\n                <Search/>\r\n                {(selected === \"option3\") ?\r\n                    <SearchInput getAJoke={getAJoke} />\r\n                    :\r\n                    null\r\n                }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JokeOptions","import React, {useContext} from \"react\";\r\nimport \"./JokeButton.css\"\r\nimport {JokeContext} from \"../../../JokeContext/JokeContext\";\r\n\r\nfunction JokeButton({ getAJoke }) {\r\n\r\n    const {\r\n        query,\r\n        selected\r\n    } = useContext(JokeContext);\r\n\r\n    return (\r\n        <div>\r\n        {selected === 'option3' ?\r\n            <button className=\"joke-btn\" onClick={getAJoke} disabled={query.length < 3}>Get a joke</button>\r\n        :\r\n            <button className=\"joke-btn\" onClick={getAJoke}>Get a joke</button>\r\n        }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default JokeButton","import React, {useContext} from \"react\";\r\nimport { JokeContext } from \"../../JokeContext/JokeContext\";\r\nimport \"./SideButton.css\";\r\n\r\nfunction SideButton() {\r\n    const {\r\n        visibleSide,\r\n        setVisibleSide\r\n    } = useContext(JokeContext);\r\n\r\n    /*Opening sidebar after click on side-button */\r\n    const openSideBar = () => {\r\n        if(!visibleSide) {\r\n            setVisibleSide(true);\r\n        } else {\r\n            setVisibleSide(false);\r\n        }\r\n    };\r\n\r\n    /*Change className for div \"side-button\" tag*/\r\n    const changeSidebarIcon = (changeIcon) => {\r\n        if(!visibleSide) {\r\n            changeIcon = \"\";\r\n        } else {\r\n            changeIcon = \"side-button_active\";\r\n        }\r\n        return changeIcon;\r\n    };\r\n\r\n    return (\r\n        <div className={`side-button ${changeSidebarIcon()}`} onClick={() => openSideBar()}>\r\n            <div className=\"side-button__icon\">\r\n                <span className=\"side-button__icon-line first-line\">\r\n                </span>\r\n                <span className=\"side-button__icon-line second-line\">\r\n                </span>\r\n            </div>\r\n            <div className=\"side-button__title\">Favourite</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideButton","import React, {useContext, useEffect} from \"react\";\r\nimport \"./JokeLogic.css\";\r\nimport Joke from \"./Joke/Joke\";\r\nimport JokeOptions from \"./JokeOptions/JokeOptions\";\r\nimport JokeButton from \"./JokeButton/JokeButton\";\r\nimport SideButton from \"../../Sidebar/SideButton/SideButton\";\r\nimport {JokeContext} from \"../../JokeContext/JokeContext\";\r\n\r\nfunction JokeLogic() {\r\n\r\n    const {\r\n        jokes,\r\n        setJokes,\r\n        selected,\r\n        loading,\r\n        setLoading,\r\n        setCategories,\r\n        active,\r\n        query,\r\n        setQuery,\r\n        setValidSearchValue\r\n    } = useContext(JokeContext);\r\n\r\n    /*Getting categories of jokes from chuckNorris.io API*/\r\n    useEffect(() => {\r\n       async function getCategories() {\r\n            const response = await fetch('https://api.chucknorris.io/jokes/categories');\r\n            const data = await response.json();\r\n            setCategories(data);\r\n        }\r\n        getCategories().catch((e) => alert(e));\r\n    }, []);\r\n\r\n    /*Getting jokes from chuckNorris.io API*/\r\n    const getAJoke = async () => {\r\n        setLoading(true);\r\n        if(selected === \"option1\") {\r\n            const response = await fetch('https://api.chucknorris.io/jokes/random');\r\n            const data = await response.json();\r\n            getUnique(jokes, data);\r\n            setLoading(false);\r\n        }\r\n        else if(selected === \"option2\") {\r\n            const response = await fetch(`https://api.chucknorris.io/jokes/random?category=${active}`);\r\n            const data = await response.json();\r\n            getUnique(jokes, data);\r\n            setLoading(false);\r\n        }\r\n        else if(selected === \"option3\") {\r\n            const response = await fetch(`https://api.chucknorris.io/jokes/search?query=${query}`);\r\n            const data = await response.json();\r\n            const singleJoke = randomSearchJoke(data.result);\r\n            checkValidQuery(singleJoke);\r\n        }\r\n    };\r\n\r\n    /*Clear search input field*/\r\n    const checkValidQuery = (singleJ) => {\r\n        if(singleJ === undefined) {\r\n            setQuery(\"\");\r\n            setValidSearchValue(false);\r\n            setLoading(false);\r\n        } else {\r\n            getUnique(jokes, singleJ);\r\n            setValidSearchValue(true);\r\n            setQuery(\"\");\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    /*Generate single joke from array of jokes(received from 3rd option - Search) */\r\n    const randomSearchJoke = (jokes_r) =>  {\r\n      return jokes_r[Math.floor(Math.random() * jokes_r.length)];\r\n    };\r\n\r\n    /*Prevent render duplicate jokes*/\r\n    const getUnique = (jokes, data) => {\r\n        if (jokes.find(joke => joke.id === data.id)) {\r\n           return null;\r\n        } else {\r\n            setJokes([data, ...jokes]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"joke-logic\">\r\n            <div className=\"joke-logic__logo\">\r\n                <div className=\"joke-logic__logo-title\">MSI 2020</div>\r\n                <SideButton/>\r\n            </div>\r\n            <div className=\"joke-logic__intro\">\r\n                <div className=\"joke-logic__intro-title\">Hey!</div>\r\n                <div className=\"joke-logic__intro-subtitle\">Let's try to find a joke for you:</div>\r\n\r\n                {/*Radio Buttons*/}\r\n                <JokeOptions getAJoke={getAJoke} />\r\n\r\n                {/*Get a Joke Button*/}\r\n                <JokeButton getAJoke={getAJoke} />\r\n            </div>\r\n            {/*Loader*/}\r\n            {loading && <span className=\"joke-logic__loader\"> </span>}\r\n            {/*Jokes*/}\r\n            {\r\n                jokes.map(joke => {\r\n                    return (\r\n                        <Joke\r\n                            value={joke.value}\r\n                            id={joke.id}\r\n                            category={joke.categories}\r\n                            updated_at={joke.updated_at}\r\n                            jokeIsF={joke.isFavourite}\r\n                            key={joke.id}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JokeLogic","import React, {useContext} from \"react\";\r\nimport JokeLogic from \"./JokeLogic/JokeLogic\";\r\nimport \"./Content.css\";\r\nimport {JokeContext} from \"../JokeContext/JokeContext\";\r\n\r\nfunction Content() {\r\n\r\n    const {\r\n        visibleSide\r\n    } = useContext(JokeContext);\r\n\r\n    /*Change className for div \"content\" tag*/\r\n    const deactivateContent = (closeContent) => {\r\n        if(!visibleSide) {\r\n            closeContent = \"\";\r\n        } else {\r\n            closeContent = \"content_deactivate\";\r\n        }\r\n        return closeContent;\r\n    };\r\n\r\n    return (\r\n        <div className={`content ${deactivateContent()}`}>\r\n            <JokeLogic />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import React, {useContext} from \"react\";\r\nimport \"./FavJoke.css\";\r\nimport UnlikeJokeButton from \"./UnlikeJokeButton/UnlikeJokeButton\";\r\nimport {JokeContext} from \"../../JokeContext/JokeContext\";\r\n\r\nfunction FavJoke({ value, id, category, updated_at }) {\r\n\r\n    const {\r\n        calculateHours\r\n    } = useContext(JokeContext);\r\n\r\n    return (<div>{ value ?\r\n        <div className=\"fav-joke\">\r\n            <UnlikeJokeButton id={id} />\r\n            <div className=\"fav-joke__container\">\r\n                <div className=\"fav-joke__comment-circle\"> </div>\r\n                <div className=\"fav-joke__content\">\r\n                    <div className=\"fav-joke__id\">\r\n                        ID: <a id=\"fav-joke__id-link\" href={`https://api.chucknorris.io/jokes/${id}`}>{id}</a>\r\n                    </div>\r\n                    <div className=\"fav-joke__value\">{value}</div>\r\n                    <div className=\"fav-joke__apps\">\r\n                        <div className=\"fav-joke__apps-last-update\">Last update: {calculateHours(updated_at)} hours ago</div>\r\n                        <div className=\"fav-joke__apps-category\">{category}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        :\r\n            null\r\n        }</div>\r\n    );\r\n}\r\n\r\nexport default FavJoke","import React, {useContext} from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport { JokeContext } from \"../JokeContext/JokeContext\";\r\nimport FavJoke from \"./FavJoke/FavJoke\";\r\n\r\nfunction Sidebar() {\r\n\r\n    const {\r\n        visibleSide,\r\n        favJokes\r\n    } = useContext(JokeContext);\r\n\r\n    /*Change className for aside \"sidebar\" tag*/\r\n    const openSide = (opS) => {\r\n        if(!visibleSide) {\r\n            opS = \"\";\r\n        } else {\r\n            opS = \"sidebar_active\";\r\n        }\r\n        return opS;\r\n    };\r\n\r\n    return (\r\n        <aside className={`sidebar ${openSide()}`}>\r\n            <div className=\"sidebar__title\">Favourite</div>\r\n            <div className=\"sidebar__jokes\">\r\n            {\r\n                favJokes.map(favJoke => {\r\n                    return (\r\n                        <FavJoke\r\n                            value={favJoke.value}\r\n                            id={favJoke.id}\r\n                            category={favJoke.categories}\r\n                            updated_at={favJoke.updated_at}\r\n                            key={favJoke.id}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React from 'react';\nimport './App.css';\nimport Content from './components/Content/Content';\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport {JokeProvider} from \"./components/JokeContext/JokeContext\";\n\nfunction App() {\n\n  return (\n      <JokeProvider>\n          <section className=\"app\">\n              <Content/>\n              <Sidebar/>\n          </section>\n      </JokeProvider>\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\n\n\n// ========================================\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}